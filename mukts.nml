// grf.pnml
// GRF definition block
grf {
	grfid: "KA\01\01"; //must be 4 bytes; \xx\xx where \xx is a hex number, allowing for 256 versions
	name: string(STR_GRF_NAME);
	desc: string(STR_GRF_DESC);
	version: 0;
	min_compatible_version: 0; //bump up this number to version when breaking compatibility
}

// railtypes.pnml
// Railtype definitions
railtypetable {
	//3RDR is 3rd rail; 3RDC is dual-voltage
	"RAIL", "3RDR", "ELRL", "3RDC", "MONO", "MGLV",
}

// templates.pnml
// Train sprite template
template tmpl_train_4(x, y) {	
	//leftx, topy, width, height, offsetx, offsety
	[x + 25, y + 2, 8,		23,		-3,		-11] //n
	[x + 35, y + 2, 20,		18,		-11,	-10] //ne
	[x + 58, y + 2, 32,		12,		-16,	-7] //e
	[x + 92, y + 2, 20,		18,		-12,	-11] //se
}

// Train sprite template
template tmpl_train_8(x, y) {	
	//leftx, topy, width, height, offsetx, offsety
	[x + 25, y + 2, 8,		23,		-3,		-11] //n
	[x + 35, y + 2, 20,		18,		-11,	-10] //ne
	[x + 58, y + 2, 32,		12,		-16,	-7] //e
	[x + 92, y + 2, 20,		18,		-12,	-11] //se
	[x + 115, y + 2, 8,		23,		-3,		-11] //s
	[x + 125, y + 2, 20,	18,		-11,	-10] //sw
	[x + 148, y + 2, 32,	12,		-16,	-7] //w
	[x + 182, y + 2, 20,	18,		-12,	-11] //nw
}

// 195-1.pnml
// Spriteset car definitions
spriteset (spriteset_br_195_3_front, "gfx/dmu/br195.png") { tmpl_train_8(0, 0) }
spriteset (spriteset_br_195_3_middle, "gfx/dmu/br195.png") { tmpl_train_4(0, 29) }
spriteset (spriteset_br_195_3_rear, "gfx/dmu/br195.png") { tmpl_train_8(0, 58) }
spriteset (spriteset_br_195_3_purchase, "gfx/dmu/br195.png") {
	[2, 89, 91, 12, -25, -6]	
}

// Choose sprites depending on car position
switch(FEAT_TRAINS, SELF, switch_br_195_3_spriteset, position_in_consist % 3) {
	// 0 is first car, 1 is second car, 2 is third car, so on...
	// % 3 means that the graphics will repeat properly if another train is added to the end
	// so that we get: (front,middle,end);(front,middle,end)...
	0: spriteset_br_195_3_front;
	2: spriteset_br_195_3_rear;
	spriteset_br_195_3_middle;
}

// Define articulations
switch(FEAT_TRAINS, SELF, switch_br_195_3_articulated, extra_callback_info1) {
	// extra_callback_info1 returns the car number, so 1 is the second car, 2 the third, .. so on
	// The callback runs this switch until it returns NO_MORE_ARTICULATED_PARTS, which ends the growth
	1..2: return item_br_195_3;
	return CB_RESULT_NO_MORE_ARTICULATED_PARTS; // Stop adding more cars
}

// Only give particle effects to front/rear cars
switch(FEAT_TRAINS, SELF, switch_br_195_3_particles, position_in_consist % 3) {
	// 0 is first car, 1 is second car, 2 is third car, so on...
	0: visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 2, DISABLE_WAGON_POWER);
	2: visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 2, DISABLE_WAGON_POWER);
	visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
}

// Start/stop switch, used to limit maximum length
switch(FEAT_TRAINS, SELF, switch_br_195_3_start_stop, num_vehs_in_consist) {	
	return CB_RESULT_NO_TEXT;   // Allow any length
}

// Only allow the same train type to be added to itself
switch(FEAT_TRAINS, SELF, switch_br_195_3_can_attach_wagon, vehicle_type_id) {
	item_br_195_3: return CB_RESULT_ATTACH_ALLOW;
	return string(STR_CANNOT_ATTACH);
}

// Class 195/1 (3car)
item(FEAT_TRAINS, item_br_195_3) {
	property {
		name: string(STR_BR_195_3CAR);
		climates_available: ALL_CLIMATES; // available in all climates
		introduction_date: date(2019, 07, 01);
		model_life: VEHICLE_NEVER_EXPIRES; // keep available forever		
		vehicle_life: 30; // years after vehicle is deemed "old" and should be replaced
		reliability_decay: 0; // dont reduce reliabilty, (will grow from 75% upwards over the years)
		refittable_cargo_classes: bitmask(CC_PASSENGERS);
		non_refittable_cargo_classes: bitmask();
		cost_factor: 45;
		loading_speed: 5;
		running_cost_factor: 100;
		cargo_allow_refit: [];
		cargo_disallow_refit: [];
		
		speed: 100 mph;
		power: 1569 hp;	// nice
		cargo_capacity: (204/3);
		weight: 128.36 ton; 
		
		sprite_id: SPRITE_ID_NEW_TRAIN; // required
		misc_flags: bitmask(TRAIN_FLAG_MU); // acts as multiple-unit
		refit_cost: 0;
		track_type: RAIL;
		ai_special_flag: AI_FLAG_PASSENGER; // tell ai that this is a passenger train
		running_cost_base: RUNNING_COST_DIESEL;
		dual_headed: 0; // set to 0 otherwise limited to 2 cars only
		engine_class: ENGINE_CLASS_DIESEL; // even if its 3rd rail, ELECTRIC would give overhead wire effects
		extra_power_per_wagon: 0 kW;
		tractive_effort_coefficient: 0.3;
		air_drag_coefficient: 0.06;
		length: 8; // full tile length vehicle
		visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 2, DISABLE_WAGON_POWER); // visual fx
		extra_weight_per_wagon: 0 ton;
		bitmask_vehicle_info: 0;
	}
	
	graphics {
		default: switch_br_195_3_spriteset;
		purchase: spriteset_br_195_3_purchase;
		
		articulated_part: switch_br_195_3_articulated;
		start_stop: switch_br_195_3_start_stop;	
		can_attach_wagon: switch_br_195_3_can_attach_wagon;
		visual_effect_and_powered: switch_br_195_3_particles;
				
		purchase_cargo_capacity: return (204/3);
				
	}
}

// 195-0.pnml
// Spriteset car definitions
spriteset (spriteset_br_195_2_front, "gfx/dmu/br195.png") { tmpl_train_8(0, 0) }
spriteset (spriteset_br_195_2_rear, "gfx/dmu/br195.png") { tmpl_train_8(0, 58) }
spriteset (spriteset_br_195_2_purchase, "gfx/dmu/br195.png") {
	[2, 89, 91, 12, -25, -6]	
}

// Choose sprites depending on car position
switch(FEAT_TRAINS, SELF, switch_br_195_2_spriteset, position_in_consist % 2) {
	// 0 is first car, 1 is second car, so on...
	// % 2 means that the graphics will repeat properly if another train is added to the end
	// so that we get: (front,end);(front,end)...
	0: spriteset_br_195_2_front;
	spriteset_br_195_2_rear;
}

// Define articulations
switch(FEAT_TRAINS, SELF, switch_br_195_2_articulated, extra_callback_info1) {
	// extra_callback_info1 returns the car number, so 1 is the second car, .. so on
	// The callback runs this switch until it returns NO_MORE_ARTICULATED_PARTS, which ends the growth
	1: return item_br_195_2;
	return CB_RESULT_NO_MORE_ARTICULATED_PARTS; // Stop adding more cars
}

// Start/stop switch, used to limit maximum length
switch(FEAT_TRAINS, SELF, switch_br_195_2_start_stop, num_vehs_in_consist) {	
	return CB_RESULT_NO_TEXT;   // Allow any length
}

// Only allow the same train type to be added to itself
switch(FEAT_TRAINS, SELF, switch_br_195_2_can_attach_wagon, vehicle_type_id) {
	item_br_195_2: return CB_RESULT_ATTACH_ALLOW;
	return string(STR_CANNOT_ATTACH);
}

// Class 195/0 (2car)
item(FEAT_TRAINS, item_br_195_2) {
	property {
		name: string(STR_BR_195_2CAR);
		climates_available: ALL_CLIMATES; // available in all climates
		introduction_date: date(2019, 07, 01);
		model_life: VEHICLE_NEVER_EXPIRES; // keep available forever		
		vehicle_life: 30; // years after vehicle is deemed "old" and should be replaced
		reliability_decay: 0; // dont reduce reliabilty, (will grow from 75% upwards over the years)
		refittable_cargo_classes: bitmask(CC_PASSENGERS);
		non_refittable_cargo_classes: bitmask();
		cost_factor: 45;
		loading_speed: 5;
		running_cost_factor: 100;
		cargo_allow_refit: [];
		cargo_disallow_refit: [];
		
		speed: 100 mph;
		power: 1036 hp;
		cargo_capacity: (124/2);
		weight: 87.4 ton; 
		
		sprite_id: SPRITE_ID_NEW_TRAIN; // required
		misc_flags: bitmask(TRAIN_FLAG_MU); // acts as multiple-unit
		refit_cost: 0;
		track_type: RAIL;
		ai_special_flag: AI_FLAG_PASSENGER; // tell ai that this is a passenger train
		running_cost_base: RUNNING_COST_DIESEL;
		dual_headed: 0; // set to 0 otherwise limited to 2 cars only
		engine_class: ENGINE_CLASS_DIESEL; // even if ts 3rd rail, ELECTRIC would give overhead wire effects
		extra_power_per_wagon: 0 kW;
		tractive_effort_coefficient: 0.3;
		air_drag_coefficient: 0.06;
		length: 8; // full tile length vehicle
		visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 2, DISABLE_WAGON_POWER); // visual fx
		extra_weight_per_wagon: 0 ton;
		bitmask_vehicle_info: 0;
	}
	
	graphics {
		default: switch_br_195_2_spriteset;
		purchase: spriteset_br_195_2_purchase;
		
		articulated_part: switch_br_195_2_articulated;
		start_stop: switch_br_195_2_start_stop;	
		can_attach_wagon: switch_br_195_2_can_attach_wagon;
		visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 2, DISABLE_WAGON_POWER);
				
		purchase_cargo_capacity: return (124/2);
		
	}
}

