// Choose sprites depending on car position
switch(FEAT_TRAINS, SELF, switch_BR321_spriteset_NSE, position_in_articulated_veh % 4) {
	0: spriteset_BR321_front_NSE;
	1: spriteset_BR321_middle_panto_NSE;
	2: spriteset_BR321_middle_NSE;
	3: spriteset_BR321_rear_NSE;
}

switch(FEAT_TRAINS, SELF, switch_BR321_spriteset_NS, position_in_articulated_veh % 4) {
	0: spriteset_BR321_front_NS;
	1: spriteset_BR321_middle_panto_NS;
	2: spriteset_BR321_middle_NS;
	3: spriteset_BR321_rear_NS;
}

switch(FEAT_TRAINS, SELF, switch_BR321_spriteset_GreaterAnglia, position_in_articulated_veh % 4) {
	0: spriteset_BR321_front_GreaterAnglia;
	1: spriteset_BR321_middle_panto_GreaterAnglia;
	2: spriteset_BR321_middle_GreaterAnglia;
	3: spriteset_BR321_rear_GreaterAnglia;
}

switch(FEAT_TRAINS, SELF, switch_BR321_spriteset_Silverlink, position_in_articulated_veh % 4) {
	0: spriteset_BR321_front_Silverlink;
	1: spriteset_BR321_middle_panto_Silverlink;
	2: spriteset_BR321_middle_Silverlink;
	3: spriteset_BR321_rear_Silverlink;
}

switch(FEAT_TRAINS, SELF, switch_BR321_spriteset_LondonMidland, position_in_articulated_veh % 4) {
	0: spriteset_BR321_front_LondonMidland;
	1: spriteset_BR321_middle_panto_LondonMidland;
	2: spriteset_BR321_middle_LondonMidland;
	3: spriteset_BR321_rear_LondonMidland;
}

switch(FEAT_TRAINS, SELF, switch_BR321_spriteset_WYPTE, position_in_articulated_veh % 4) {
	0: spriteset_BR321_front_WYPTE;
	1: spriteset_BR321_middle_panto_WYPTE;
	2: spriteset_BR321_middle_WYPTE;
	3: spriteset_BR321_rear_WYPTE;
}

switch(FEAT_TRAINS, SELF, switch_BR321_spriteset_LO, position_in_articulated_veh % 4) {
	0: spriteset_BR321_front_LO;
	1: spriteset_BR321_middle_panto_LO;
	2: spriteset_BR321_middle_LO;
	3: spriteset_BR321_rear_LO;
}

switch(FEAT_TRAINS, SELF, switch_BR321_spriteset, cargo_subtype) {
	0: switch_BR321_spriteset_NSE;
	1: switch_BR321_spriteset_NS;
	2: switch_BR321_spriteset_GreaterAnglia;
	3: switch_BR321_spriteset_Silverlink;
	4: switch_BR321_spriteset_LondonMidland;
	5: switch_BR321_spriteset_WYPTE;
	6: switch_BR321_spriteset_LO;
}

switch(FEAT_TRAINS, SELF, switch_BR321_subtype_text, cargo_subtype) {
	0: return string(str_NSE);
	1: return string(str_NS);
	2: return string(str_GreaterAnglia);
	3: return string(str_Silverlink);
	4: return string(str_LondonMidland);
	5: return string(str_WYPTEMetro);
	6: return string(str_overground);
	return CB_RESULT_NO_TEXT;
}

// Define articulations
switch(FEAT_TRAINS, SELF, switch_BR321_articulated, extra_callback_info1) {
	1..3: return item_BR321;
	return CB_RESULT_NO_MORE_ARTICULATED_PARTS; // Stop adding more cars
}

// Only give particle effects to front/rear cars
switch(FEAT_TRAINS, SELF, switch_BR321_particles, position_in_articulated_veh % 5) {
	1: visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 2, DISABLE_WAGON_POWER);
	visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
}

// Start/stop switch, used to limit maximum length
switch(FEAT_TRAINS, SELF, switch_BR321_start_stop, num_vehs_in_consist) {	
	return CB_RESULT_NO_TEXT;   // Allow any length
}

// Only allow the same train type to be added to itself
switch(FEAT_TRAINS, SELF, switch_BR321_can_attach_wagon, vehicle_type_id) {
	item_BR321: return CB_RESULT_ATTACH_ALLOW;
	return string(STR_CANNOT_ATTACH);
}


item(FEAT_TRAINS, item_BR321, 653) {
	property {
		name: string(STR_BR321);
		climates_available: ALL_CLIMATES; // available in all climates
		introduction_date: date(1988, 03, 17);
		model_life: VEHICLE_NEVER_EXPIRES; // keep available forever		
		vehicle_life: 30; // years after vehicle is deemed "old" and should be replaced
		reliability_decay: 0; // dont reduce reliabilty, (will grow from 75% upwards over the years)
		refittable_cargo_classes: bitmask(CC_PASSENGERS);
		non_refittable_cargo_classes: bitmask();
		cost_factor: 95;
		loading_speed: 25;
		running_cost_factor: 55;
		cargo_allow_refit: [];
		cargo_disallow_refit: [];
		
		speed: 100 mph;
		power: 1600 hp;
		cargo_capacity: (313/4);
		weight: 137 ton;
		
		sprite_id: SPRITE_ID_NEW_TRAIN; // required
		refit_cost: 0;
		track_type: ELRL;
		ai_special_flag: AI_FLAG_PASSENGER; // tell ai that this is a passenger train
		running_cost_base: RUNNING_COST_ELECTRIC;
		dual_headed: 0; // set to 0 otherwise limited to 2 cars only
		engine_class: ENGINE_CLASS_ELECTRIC; // even if its 3rd rail, ELECTRIC would give overhead wire effects
		extra_power_per_wagon: 0 kW;
		tractive_effort_coefficient: 0.3;
		air_drag_coefficient: 0.06;
		length: 8; // full tile length vehicle
		visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 2, DISABLE_WAGON_POWER); // visual fx
		extra_weight_per_wagon: 0 ton;
		bitmask_vehicle_info: 0;
	}
	
	graphics {
		default: switch_BR321_spriteset;
		purchase: spriteset_BR321_purchase;
		cargo_subtype_text: switch_BR321_subtype_text;
		articulated_part: switch_BR321_articulated;
		start_stop: switch_BR321_start_stop;	
		can_attach_wagon: switch_BR321_can_attach_wagon;
		visual_effect_and_powered: switch_BR321_particles;			
		additional_text: string(STR_DSC_BR321);	
		cargo_capacity:						return(313/4 * param_pax);
		cost_factor:	return(GetAdjustedCost(85));
		running_cost_factor: return(GetAdjustedCost(50));
	}
}