// Spriteset car definitions


// Choose sprites depending on car position
switch(FEAT_TRAINS, SELF, switch_br_331_1_spriteset, position_in_consist % 4) {
	// 0 is first car, 1 is second car, 2 is third car, so on...
	// % 4 means that the graphics will repeat properly if another train is added to the end
	// so that we get: (front,panto,middle,end);(front,panto,middle,end)...
	0: spriteset_br_195_331_front;
	1:	spriteset_br_331_middle_panto;
	3: spriteset_br_195_331_rear;
	spriteset_br_195_331_middle;
}

// Define articulations
switch(FEAT_TRAINS, SELF, switch_br_331_1_articulated, extra_callback_info1) {
	// extra_callback_info1 returns the car number, so 1 is the second car, 2 the third, .. so on
	// The callback runs this switch until it returns NO_MORE_ARTICULATED_PARTS, which ends the growth
	1..3: return item_br_331_1;
	return CB_RESULT_NO_MORE_ARTICULATED_PARTS; // Stop adding more cars
}

// Only give particle effects to second/pantograph car
switch(FEAT_TRAINS, SELF, switch_br_331_1_particles, position_in_consist % 3) {
	// 0 is first car, 1 is second car, 2 is third car, so on...
	1: visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 2, DISABLE_WAGON_POWER);
	visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
}

// Start/stop switch, used to limit maximum length
switch(FEAT_TRAINS, SELF, switch_br_331_1_start_stop, num_vehs_in_consist) {	
	return CB_RESULT_NO_TEXT;   // Allow any length
}

// Only allow the same train type to be added to itself
switch(FEAT_TRAINS, SELF, switch_br_331_1_can_attach_wagon, vehicle_type_id) {
	item_br_331_1: return CB_RESULT_ATTACH_ALLOW;
	return string(STR_CANNOT_ATTACH);
}

// Class 331/0 (3car)
item(FEAT_TRAINS, item_br_331_1) {
	property {
		name: string(STR_BR_331_4CAR);
		climates_available: ALL_CLIMATES; // available in all climates
		introduction_date: date(2019, 07, 01);
		model_life: VEHICLE_NEVER_EXPIRES; // keep available forever		
		vehicle_life: 35; // years after vehicle is deemed "old" and should be replaced
		reliability_decay: 0; // dont reduce reliabilty, (will grow from 75% upwards over the years)
		refittable_cargo_classes: bitmask(CC_PASSENGERS);
		non_refittable_cargo_classes: bitmask();
		cost_factor: 80;
		loading_speed: 25;
		running_cost_factor: 42;
		cargo_allow_refit: [];
		cargo_disallow_refit: [];
		
		speed: 100 mph;
		power: 2360 hp;
		cargo_capacity: (284/4);
		weight: 169.0 ton; 
		
		sprite_id: SPRITE_ID_NEW_TRAIN; // required
		misc_flags: bitmask(TRAIN_FLAG_MU); // acts as multiple-unit
		refit_cost: 0;
		track_type: ELRL;
		ai_special_flag: AI_FLAG_PASSENGER; // tell ai that this is a passenger train
		running_cost_base: RUNNING_COST_ELECTRIC;
		dual_headed: 0; // set to 0 otherwise limited to 2 cars only
		engine_class: ENGINE_CLASS_ELECTRIC; // even if its 3rd rail, ELECTRIC would give overhead wire effects
		extra_power_per_wagon: 0 kW;
		tractive_effort_coefficient: 0.3;
		air_drag_coefficient: 0.06;
		length: 8; // full tile length vehicle
		visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 2, DISABLE_WAGON_POWER); // visual fx
		extra_weight_per_wagon: 0 ton;
		bitmask_vehicle_info: 0;
	}
	
	graphics {
		default: switch_br_331_1_spriteset;
		purchase: spriteset_br_331_purchase;
		
		articulated_part: switch_br_331_1_articulated;
		start_stop: switch_br_331_1_start_stop;	
		can_attach_wagon: switch_br_331_1_can_attach_wagon;
		visual_effect_and_powered: switch_br_331_1_particles;
				
		purchase_cargo_capacity: return (284/4);
		additional_text: string(STR_DSC_BR_331);	
				
	}
}