
item (FEAT_TRAINS, item_BRMk2DTSO, 320) {
	property {
		name: 							string(STR_NAME_BRMk2DTSO);
		climates_available: 			ALL_CLIMATES;
		introduction_date:				date(1964,4,21);
		model_life:						100;
		cargo_allow_refit:				[PASS, TOUR];
		loading_speed:					10;
		cost_factor:					50;
		running_cost_factor:			17;
		power:							0;
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		refit_cost:						0;
		running_cost_base:				RUNNING_COST_STEAM;
		default_cargo_type:				PASS;
		cargo_capacity:					64;
		weight:							32 ton;
		length:							8;
		bitmask_vehicle_info:			0;
		cargo_age_period:				185;
	}
	graphics {
	additional_text:					return(string(str_purchase_coach,string(str_BRMk2D_liveries)));
	can_attach_wagon:					CB_RESULT_ATTACH_ALLOW;
	cargo_subtype_text:					sw_BRMk2D_cargo_subtype_text;
	default: 							sw_BRMk2DTSO;
	purchase:							spriteset_BRMk2DTSO_Purchase;
	colour_mapping: 					return PALETTE_CC_FIRST;
	cargo_capacity: return(64 * param_pax);
	cost_factor:	return(GetAdjustedCost(50));
	running_cost_factor: return(GetAdjustedCost(17));
}
}

item (FEAT_TRAINS, item_BRMk2DFO, 321) {
	property {
		name: 							string(STR_NAME_BRMk2DFO);
		climates_available: 			ALL_CLIMATES;
		introduction_date:				date(1964,4,21);
		model_life:						100;
		cargo_allow_refit:				[PASS, TOUR];
		loading_speed:					10;
		cost_factor:					50;
		running_cost_factor:			17;
		power:							0;
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		refit_cost:						0;
		running_cost_base:				RUNNING_COST_STEAM;
		default_cargo_type:				PASS;
		cargo_capacity:					42;
		weight:							32 ton;
		length:							8;
		bitmask_vehicle_info:			0;
		cargo_age_period:				250;
	}
	graphics {
	additional_text:					return(string(str_purchase_coach,string(str_BRMk2D_liveries)));
	can_attach_wagon:					CB_RESULT_ATTACH_ALLOW;
	cargo_subtype_text:					sw_BRMk2D_cargo_subtype_text;
	default: 							sw_BRMk2DFO;
	purchase:							spriteset_BRMk2DFO_Purchase;
	colour_mapping: 					return PALETTE_CC_FIRST;
	cargo_capacity: return(42 * param_pax);
	cost_factor:	return(GetAdjustedCost(50));
	running_cost_factor: return(GetAdjustedCost(17));
}
}

item (FEAT_TRAINS, item_BRMk2DBSO, 322) {
	property {
		name: 							string(STR_NAME_BRMk2DBSO);
		climates_available: 			ALL_CLIMATES;
		introduction_date:				date(1964,4,21);
		model_life:						100;
		cargo_allow_refit:				[PASS, TOUR];
		loading_speed:					10;
		cost_factor:					50;
		running_cost_factor:			17;
		power:							0;
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		refit_cost:						0;
		running_cost_base:				RUNNING_COST_STEAM;
		default_cargo_type:				PASS;
		cargo_capacity:					32;
		weight:							32 ton;
		length:							8;
		bitmask_vehicle_info:			0;
		cargo_age_period:				185;
	}
	graphics {
	additional_text:					return(string(str_purchase_coach,string(str_BRMk2D_liveries)));
	can_attach_wagon:					CB_RESULT_ATTACH_ALLOW;
	cargo_subtype_text:					sw_BRMk2D_cargo_subtype_text;
	default: 							sw_BRMk2DBSO;
	purchase:							spriteset_BRMk2DBSO_Purchase;
	colour_mapping: 					return PALETTE_CC_FIRST;
	cargo_capacity: return(32 * param_pax);
	cost_factor:	return(GetAdjustedCost(50));
	running_cost_factor: return(GetAdjustedCost(17));
}
}

item (FEAT_TRAINS, item_BRMk2DDBSO, 323) {
	property {
		name: 							string(STR_NAME_BRMk2DDBSO);
		climates_available: 			ALL_CLIMATES;
		introduction_date:				date(1964,4,21);
		model_life:						100;
		cargo_allow_refit:				[PASS, TOUR];
		loading_speed:					10;
		cost_factor:					50;
		running_cost_factor:			17;
		power:							0;
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		refit_cost:						0;
		running_cost_base:				RUNNING_COST_STEAM;
		default_cargo_type:				PASS;
		cargo_capacity:					32;
		weight:							32 ton;
		length:							8;
		bitmask_vehicle_info:			0;
		cargo_age_period:				185;
	}
	graphics {
	additional_text:					return(string(str_purchase_coach,string(str_BRMk2DBSO_liveries)));
	can_attach_wagon:					CB_RESULT_ATTACH_ALLOW;
	cargo_subtype_text:					sw_BRMk2DDBSO_cargo_subtype_text;
	default: 							sw_BRMk2DDBSO;
	purchase:							spriteset_BRMk2DBSO_Purchase;
	colour_mapping: 					return PALETTE_CC_FIRST;
	cargo_capacity: return(32 * param_pax);
	cost_factor:	return(GetAdjustedCost(50));
	running_cost_factor: return(GetAdjustedCost(17));
}
}